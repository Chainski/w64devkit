name: Build w64devkit

on:
  push:
    branches:
      - master

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arch: [x64, x86]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ matrix.arch }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-${{ matrix.arch }}-

      - name: Generate archive name
        id: meta
        run: |
          VER="$(git describe --tags --always | tr v -)"
          echo "version=${VER}" >> $GITHUB_OUTPUT
          echo "archive=w64devkit-${{ matrix.arch }}-${VER}" >> $GITHUB_OUTPUT

      - name: Build with export
        run: |
          docker buildx build \
            --build-arg ARCH=${{ matrix.arch }} \
            --cache-from=type=local,src=/tmp/.buildx-cache \
            --cache-to=type=local,dest=/tmp/.buildx-cache-new,mode=max \
            --output type=local,dest=out .
          mv out/*.exe ./${{ steps.meta.outputs.archive }}.exe
        # Swap cache dirs to avoid growing unbounded
        shell: bash

      - name: Move new cache into place
        if: always()
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.meta.outputs.archive }}
          path: ${{ steps.meta.outputs.archive }}.exe

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: out

      - name: Delete existing release (if any)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          VER="$(git describe --tags --always | tr v -)"
          gh release delete $VER --yes || true
          git push origin :refs/tags/$VER || true

      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.sha }}
          name: w64devkit-${{ github.sha }}
          files: out/**/*.exe
