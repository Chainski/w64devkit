name: Build w64devkit

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        arch: ["x64", "x86"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up environment
        run: |
          # Set environment variables for reliable HTTP mirrors
          echo "export GNU_MIRROR=https://ftpmirror.gnu.org" >> $GITHUB_ENV
          echo "export GCC_VERSION=15.2.0" >> $GITHUB_ENV

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            /tmp/gcc-${{ env.GCC_VERSION }}
            /tmp/gmp-${{ env.GCC_VERSION }}
            /tmp/mpfr-${{ env.GCC_VERSION }}
            /tmp/mpc-${{ env.GCC_VERSION }}
          key: gcc-${{ env.GCC_VERSION }}-${{ runner.os }}-${{ matrix.arch }}
          restore-keys: |
            gcc-${{ env.GCC_VERSION }}-${{ runner.os }}-

      - name: Apply patch for x86 architecture
        if: matrix.arch == 'x86'
        run: patch -p1 -i src/variant-x86.patch

      - name: Generate archive name and version string
        id: filename
        env:
          ARCH: ${{ matrix.arch }}
        run: |
          GIT_VERSION="$(git describe --tags --always)"
          echo "version=${GIT_VERSION:1}" >> $GITHUB_OUTPUT
          echo "archive=w64devkit-$ARCH-${GIT_VERSION:1}" >> $GITHUB_OUTPUT

      - name: Build w64devkit
        run: |
          docker build -t w64devkit .
          docker run --rm w64devkit > w64devkit-${{ steps.filename.outputs.archive }}.exe

      - name: Delete existing release
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release delete ${{ steps.filename.outputs.version }} --yes

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.filename.outputs.archive }}
          path: w64devkit-*.exe

      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ steps.filename.outputs.version }}
          files: w64devkit-*.exe
          draft: true
