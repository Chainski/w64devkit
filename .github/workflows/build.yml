name: Build w64devkit

on:
  push:
    branches:
      - master

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up GitHub CLI
        run: sudo apt-get update && sudo apt-get install -y gh

      - name: Make script executable
        run: chmod +x ./multibuild.sh

      - name: Run multibuild.sh (quiet)
        run: |
          set -e
          ./multibuild.sh -a > build.log 2>&1 || {
            echo "Build failed"
            exit 1
          }
          docker system prune -af || true

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: w64devkit-binaries
          path: w64devkit-*.exe

      - name: Upload build log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-log
          path: build.log

      - name: Get version string
        id: version
        run: |
          VER="$(git describe --tags --always | tr v -)"
          echo "ver=$VER" >> $GITHUB_OUTPUT

      - name: Delete existing release (if any)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release delete ${{ steps.version.outputs.ver }} --yes || true
          git push origin :refs/tags/${{ steps.version.outputs.ver }} || true

      - name: Create new release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.version.outputs.ver }}
          name: w64devkit-${{ steps.version.outputs.ver }}
          files: w64devkit-*.exe
